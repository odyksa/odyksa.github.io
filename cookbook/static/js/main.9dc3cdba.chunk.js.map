{"version":3,"sources":["components/Form/index.jsx","components/Form/Form.jsx","components/Recipes/index.jsx","components/Recipes/Recipes.jsx","pages/HomePage.jsx","components/Recipe/index.jsx","components/Recipe/Recipe.jsx","pages/RecipePage.jsx","App.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","className","onSubmit","getRecipes","type","name","placeholder","Recipes","recipes","slice","items","map","recipe","key","recipe_id","title","length","concat","substring","src","image_url","alt","publisher","react_router_dom","to","pathname","state","error","HomePage","react","components_Form","components_Recipes","onClick","loadMore","Recipe","console","log","href","publisher_url","social_rank","toFixed","RecipePage","recipeID","match","params","location","find","components_Recipe","App","_callee","ev","recipeValue","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","_this","setState","window","localStorage","clear","stop","componentDidMount","recipesFromLocalStorage","getItem","JSON","parse","componentDidUpdate","recipesJSON","stringify","setItem","_this2","this","basename","react_router","path","exact","render","pages_HomePage","Object","assign","pages_RecipePage","component","Component","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dc3cdba.chunk.js","sourcesContent":["import Form from './Form';\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Form.css';\r\n \r\nexport default function Form(props) {\r\n    return (\r\n        <form className=\"form\" onSubmit={props.getRecipes}>\r\n            <input type=\"text\" name=\"recipeValue\" className=\"form__input\" placeholder=\"Type a dish name\"/>\r\n            <button type=\"submit\" className=\"form__button\">Search recipe</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nForm.propTypes = {\r\n    getRecipes: PropTypes.func.isRequired\r\n};","import Recipes from './Recipes';\r\n\r\nexport default Recipes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Recipes.css';\r\n\r\nexport default function Recipes(props) {\r\n    const recipes = props.recipes.slice(0, props.items).map(recipe => {\r\n        return (\r\n            <div className=\"recipe fade-in\" key={recipe.recipe_id}>\r\n                <h3\r\n                    className=\"recipe__title\"\r\n                >\r\n                    {\r\n                        recipe.title.length > 40 ? `${recipe.title.substring(0, 39)}...` : `${recipe.title}`\r\n                    }\r\n                </h3>\r\n                <img\r\n                    src={recipe.image_url}\r\n                    alt={recipe.title}\r\n                    className=\"recipe__img\"\r\n                />\r\n                <footer className=\"recipe__footer\">\r\n                    <p>\r\n                        Publisher:\r\n                        <span>\r\n                            {recipe.publisher.length > 25 ? `${recipe.publisher.substring(0, 24)}...` : `${recipe.publisher}`}\r\n                        </span>\r\n                    </p>\r\n                    <Link\r\n                        to={\r\n                            {\r\n                                pathname: `/recipe/${recipe.recipe_id}`,\r\n                                state: { recipes: props.recipes }\r\n                            }\r\n                        }\r\n                        className=\"recipe__details\"\r\n                    >\r\n                        View recipe\r\n                    </Link>\r\n                </footer>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <section className=\"recipes\">\r\n            {\r\n                props.error ? <p className=\"app-error\">Unfortunately, no such recipe :-(</p> : recipes\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nRecipes.propTypes = {\r\n    getRecipes: PropTypes.array\r\n};","import React, { Fragment } from 'react';\r\n\r\nimport Form from '../components/Form';\r\nimport Recipes from '../components/Recipes';\r\n\r\nconst HomePage = props => {\r\n    return(\r\n        <Fragment>\r\n            <Form getRecipes={props.getRecipes}/>\r\n            <Recipes recipes={props.recipes} items={props.items} error={props.error}/>\r\n            {\r\n                props.items < props.recipes.length && <button onClick={props.loadMore} className=\"load-more-btn\">Load more</button>\r\n            }            \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import Recipe from './Recipe';\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Recipe.css';\r\n\r\nconst Recipe = props => {\r\n    const { recipe } = props;\r\n    console.log(recipe);\r\n\r\n    return (\r\n        <article className=\"recipe-card\">\r\n            <img \r\n                src={recipe.image_url} \r\n                alt={recipe.title}\r\n                className=\"recipe-card__img\"\r\n            />\r\n            <h3 className=\"recipe-card__title\">{recipe.title}</h3>\r\n            <p className=\"recipe-card__publisher\">\r\n                Publisher: \r\n                <span>{recipe.publisher}</span>\r\n            </p>\r\n            <p className=\"recipe-card__publisher\">\r\n                Link: \r\n                <a \r\n                    href={recipe.publisher_url} className=\"recipe-card__publisher-link\"\r\n                >\r\n                    {recipe.publisher}\r\n                </a>\r\n            </p>\r\n            <p className=\"recipe-card__rank\">Social rank: <span>{recipe.social_rank.toFixed(2)}</span></p>\r\n            <Link to=\"/\" className=\"recipe-card__button\">Back</Link>\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, { Fragment } from 'react';\r\n\r\nimport Recipe from '../components/Recipe';\r\n\r\nconst RecipePage = props => {\r\n    const { recipeID } = props.match.params;\r\n    const { recipes } = props.location.state;\r\n    const recipe = recipes.find(recipe => recipe.recipe_id === recipeID);\r\n\r\n    return(\r\n        <Fragment>\r\n            <Recipe recipe={recipe}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RecipePage;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport HomePage from './pages/HomePage';\r\nimport RecipePage from './pages/RecipePage';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        recipes: [],\r\n        items: 9,\r\n        error: ''\r\n    };\r\n\r\n    getRecipes = async (ev) => {\r\n        ev.preventDefault();\r\n        const recipeValue = ev.target.elements.recipeValue.value;\r\n        const API_KEY = 'bbc37d5b5eea4ac886ee0fd41c55fec0';\r\n        const api_call = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${recipeValue}&count=30`);\r\n\r\n        const data = await api_call.json();\r\n\r\n        if (data.recipes.length) {\r\n            this.setState({ \r\n                recipes: data.recipes,\r\n                error: false\r\n             });\r\n        } else {\r\n            this.setState({ \r\n                error: true,\r\n                recipes: [],\r\n                items: 9\r\n            });\r\n            window.localStorage.clear();\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const recipesFromLocalStorage = window.localStorage.getItem(\"recipes\");\r\n        const recipes = JSON.parse(recipesFromLocalStorage);\r\n\r\n        if (recipes) {\r\n            this.setState({ recipes });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        const recipesJSON = JSON.stringify(this.state.recipes);\r\n        window.localStorage.setItem(\"recipes\", recipesJSON);\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.setState({ \r\n            items: this.state.items + 9\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter basename=\"/cookbook\">\r\n                <div className=\"app\">\r\n                    {/* header */}\r\n                    <header className=\"app-header\">\r\n                        <hgroup>\r\n                            <h1 className=\"app-title\">CookBook</h1>\r\n                            <h2 className=\"app-subtitle\">Search. Cook. Eat.</h2>\r\n                        </hgroup>\r\n                    </header>\r\n                    {/* /header */}\r\n\r\n                    {/* main */}\r\n                    <main className=\"app-main\">\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/\"\r\n                                exact\r\n                                render={props =>\r\n                                    <HomePage\r\n                                        getRecipes={this.getRecipes}\r\n                                        recipes={this.state.recipes}\r\n                                        items={this.state.items}\r\n                                        loadMore={this.loadMore}\r\n                                        error={this.state.error}\r\n                                        {...props}\r\n                                    />\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/recipe/:recipeID\"\r\n                                render={props => <RecipePage {...props} />}\r\n                            />\r\n                            <Route component={() => (<div className=\"app-not-found-page\">404 Not found </div>)} />\r\n                        </Switch>\r\n                    </main>\r\n                    {/* /main */}\r\n\r\n                    {/* footer */}\r\n                    <footer className=\"app-footer\">\r\n                        <p>Search. Cook. Eat.</p>\r\n                    </footer>\r\n                    {/* /footer */}\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}