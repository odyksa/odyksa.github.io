{"version":3,"sources":["components/Items/index.js","components/TodoList/index.js","index.js"],"names":["Items","renderItem","item","react_default","a","createElement","className","key","onClick","_this","handleDelete","text","props","delete","items","this","data","map","react_flip_move_es","duration","easing","React","Component","TodoList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","currentTarget","value","setState","isEmpty","addItem","input","current","newItem","Date","now","prevState","concat","preventDefault","deleteItem","filteredItems","state","filter","createRef","Fragment","action","onSubmit","type","placeholder","ref","onChange","disabled","components_Items","ReactDOM","render","src_components_TodoList","document","getElementById"],"mappings":"gOAgCeA,6MA5BXC,WAAa,SAAAC,GACT,OACIC,EAAAC,EAAAC,cAAA,MACIC,UAAU,kBACVC,IAAKL,EAAKK,IACVC,QAAS,WAAOC,EAAKC,aAAaR,EAAKK,OAEtCL,EAAKS,KACNR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,cAKZI,aAAe,SAAAH,GAAG,OAAIE,EAAKG,MAAMC,OAAON,4EAGpC,IAAMO,EAAQC,KAAKH,MAAMI,KAAKC,IAAIF,KAAKd,YAEvC,OACIE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACVH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAU,IAAKC,OAAO,YAC3BN,WAtBDO,IAAMC,WCiFXC,qBA/EX,SAAAA,EAAYX,GAAO,IAAAH,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAT,KAAAQ,IACfd,EAAAe,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAb,KAAMH,KAQViB,aAAe,SAAAC,GACPA,EAAEC,cAAcC,MAChBvB,EAAKwB,SAAS,CAACC,SAAS,IAExBzB,EAAKwB,SAAS,CAACC,SAAS,KAbbzB,EAiBnB0B,QAAU,SAAAL,GACN,GAAiC,KAA7BrB,EAAK2B,MAAMC,QAAQL,MACnB,IAAIM,EAAU,CACV3B,KAAMF,EAAK2B,MAAMC,QAAQL,MACzBzB,IAAKgC,KAAKC,OAIlB/B,EAAKwB,SAAU,SAAAQ,GACX,MAAO,CACH3B,MAAO2B,EAAU3B,MAAM4B,OAAOJ,GAC9BJ,SAAS,KAKjBzB,EAAK2B,MAAMC,QAAQL,MAAQ,GAE3BF,EAAEa,kBAnCalC,EAsCnBmC,WAAa,SAAArC,GACT,IAAIsC,EAAgBpC,EAAKqC,MAAMhC,MAAMiC,OAAO,SAAA7C,GAAI,OAAIA,EAAKK,MAAQA,IAEjEE,EAAKwB,SAAS,CACVnB,MAAO+B,KAxCXpC,EAAKqC,MAAQ,CACThC,MAAO,GACPoB,SAAS,GAEbzB,EAAK2B,MAAQf,IAAM2B,YANJvC,wEA+Cf,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,SAAP,KACI9C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,uBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QACIC,UAAU,kBACV4C,OAAO,GACPC,SAAUpC,KAAKoB,SAEfhC,EAAAC,EAAAC,cAAA,SACI+C,KAAK,OACLC,YAAY,aACZC,IAAKvC,KAAKqB,MACVmB,SAAUxC,KAAKc,eAEnB1B,EAAAC,EAAAC,cAAA,UACImD,SAAUzC,KAAK+B,MAAMZ,QACrB5B,UAAYS,KAAK+B,MAAMZ,QAAe,WAAL,IAFrC,QAOJ/B,EAAAC,EAAAC,cAACoD,EAAD,CACIzC,KAAMD,KAAK+B,MAAMhC,MACjBD,OAAQE,KAAK6B,sBAxEdvB,IAAMC,YCE7BoC,IAASC,OACLxD,EAAAC,EAAAC,cAACuD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.bac10ba6.chunk.js","sourcesContent":["import React from 'react';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nclass Items extends React.Component {\r\n    renderItem = item => {\r\n        return (\r\n            <li \r\n                className=\"todo-list__item\"\r\n                key={item.key} \r\n                onClick={() => {this.handleDelete(item.key)}}\r\n            >\r\n                {item.text}\r\n                <span className=\"todo-list__delete-icon\">&#x2716;</span>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    handleDelete = key => this.props.delete(key);\r\n\r\n    render() {\r\n        const items = this.props.data.map(this.renderItem);\r\n\r\n        return (\r\n            <ul className=\"todo-list__items\">\r\n                <FlipMove duration={150} easing=\"ease-out\">\r\n                    {items}\r\n                </FlipMove>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;","import React from 'react';\r\nimport Items from '../Items'\r\nimport './index.css'\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isEmpty: true\r\n        };\r\n        this.input = React.createRef();\r\n    }\r\n\r\n    handleChange = e => {\r\n        if (e.currentTarget.value) {\r\n            this.setState({isEmpty: false});\r\n        } else {\r\n            this.setState({isEmpty: true});\r\n        }\r\n    }\r\n\r\n    addItem = e => {\r\n        if (this.input.current.value !== '') {\r\n            var newItem = {\r\n                text: this.input.current.value,\r\n                key: Date.now()\r\n            };\r\n        }\r\n\r\n        this.setState((prevState => {\r\n            return {\r\n                items: prevState.items.concat(newItem),\r\n                isEmpty: true\r\n            }\r\n        }));\r\n\r\n        \r\n        this.input.current.value = '';     \r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    deleteItem = key => {\r\n        var filteredItems = this.state.items.filter(item => item.key !== key);\r\n                \r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"title\">Todo-List in action</h1>\r\n                <div className=\"todo-list\">\r\n                    <form \r\n                        className=\"todo-list__form\"\r\n                        action=\"\" \r\n                        onSubmit={this.addItem}          \r\n                    >\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Enter task\"\r\n                            ref={this.input}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button \r\n                            disabled={this.state.isEmpty}\r\n                            className={!this.state.isEmpty ? '' : 'disabled'}\r\n                        >\r\n                            Add\r\n                        </button>\r\n                    </form>\r\n                    <Items \r\n                        data={this.state.items} \r\n                        delete={this.deleteItem} \r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TodoList from './components/TodoList';\r\n\r\n\r\nReactDOM.render(\r\n    <TodoList />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}