{"version":3,"sources":["components/Logo/index.js","components/Form/index.js","actions/formActions.js","actions/types.js","containers/formContainer.js","components/Outcomes/index.js","containers/outcomesContainer.js","components/Main/index.js","App.js","reducers/formReducer.js","store.js","index.js"],"names":["Logo","react_default","a","createElement","className","Form","setTime","timeInMilliseconds","newTime","Date","getHours","_this","transformMinutes","getMinutes","minutes","String","length","roundTemperature","temp","toFixed","handleSubmitForm","e","preventDefault","getWeatherData","API_URL","concat","props","enteredCityName","fetch","then","res","json","dataJSON","code","sys","country","city","name","main","sunrise","sunset","wind","speed","error","data","fetchData","catch","handleChangeCityName","changeCityName","target","value","onSubmit","this","type","placeholder","onChange","disabled","Component","newCityName","payload","connect","state","dispatch","bindActionCreators","Outcomes","_props$data","Fragment","Main","formContainer","outcomesContainer","App","components_Logo","components_Main","initialState","formReducer","arguments","undefined","action","Object","objectSpread","store","createStore","reducer","composeWithDevTools","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e9f6cced.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst Logo = () => (\r\n    <div className=\"logo\">\r\n        Weather Forecast\r\n        <div className=\"logo__icons\">\r\n            <i className=\"fas fa-cloud\"></i>\r\n            <i className=\"fas fa-bolt\"></i>\r\n            <i className=\"fas fa-sun\"></i>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React, { Component } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nclass Form extends Component {\r\n    setTime = timeInMilliseconds => {\r\n        let newTime = new Date(timeInMilliseconds * 1000);\r\n        return newTime.getHours() + ':' + this.transformMinutes(newTime.getMinutes());\r\n    };\r\n\r\n    transformMinutes = minutes => {\r\n        if (String(minutes).length === 1) {\r\n            return '0' + minutes;\r\n        }\r\n\r\n        return minutes;\r\n    };\r\n\r\n    roundTemperature = temp => {\r\n        return +temp.toFixed();\r\n    };\r\n\r\n    handleSubmitForm = e => {\r\n        e.preventDefault();\r\n        this.getWeatherData();\r\n    };\r\n\r\n    getWeatherData = () => {\r\n        const API_KEY = '7122cd64b0ae03295d684f0a0554f2b9';\r\n        const API_URL = `http://api.openweathermap.org/data/2.5/weather?q=${this.props.enteredCityName}&units=metric&appid=${API_KEY}`;\r\n\r\n        fetch(API_URL)\r\n            .then(res => res.json())\r\n            .then(dataJSON => {\r\n                return {\r\n                    code: dataJSON.sys.country,\r\n                    city: dataJSON.name,\r\n                    temp: this.roundTemperature(dataJSON.main.temp),\r\n                    sunrise: this.setTime(dataJSON.sys.sunrise),\r\n                    sunset: this.setTime(dataJSON.sys.sunset),\r\n                    wind: dataJSON.wind.speed,\r\n                    error: false\r\n                }\r\n            })\r\n            .then(data => this.props.fetchData(data))\r\n            .catch(() => this.props.fetchData({ error: true }));\r\n    }\r\n\r\n    handleChangeCityName = e => {\r\n        this.props.changeCityName(e.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"app__form\"\r\n                onSubmit={this.handleSubmitForm}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"app__search\"\r\n                    placeholder=\"Enter city name\"\r\n                    value={this.props.enteredCityName}\r\n                    onChange={this.handleChangeCityName}\r\n                />\r\n                <button\r\n                    className={!this.props.enteredCityName ? 'app__submit app__submit-inactive' : 'app__submit'}\r\n                    disabled={!this.props.enteredCityName ? true : false}\r\n                >\r\n                    Get Forecast\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import { CHANGED_CITY_NAME, FETCHED_DATA } from './types';\r\n\r\nexport const changeCityName = newCityName => ({\r\n    type: CHANGED_CITY_NAME,\r\n    payload: newCityName\r\n});\r\n\r\nexport const fetchData = data => ({\r\n    type: FETCHED_DATA,\r\n    payload: data\r\n});","export const CHANGED_CITY_NAME = 'CHANGED_CITY_NAME';\r\nexport const FETCHED_DATA = 'FETCHED_DATA';","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Form from '../components/Form';\r\nimport { changeCityName, fetchData } from '../actions/formActions';\r\n\r\nconst mapStateToProps = state => ({\r\n    enteredCityName: state.enteredCityName\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCityName: bindActionCreators(changeCityName, dispatch),\r\n    fetchData: bindActionCreators(fetchData, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst Outcomes = props => {\r\n    const { code, city, temp, sunrise, sunset, wind, error } = props.data;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {error && <p className=\"error\">Incorrect City Name :-(</p>}\r\n            {city &&\r\n                <div className=\"app__outcomes outcomes\">\r\n                    <div className=\"outcomes__title\">\r\n                        Weather in\r\n                        <span>{city}</span>,\r\n                        {code}\r\n                    </div>\r\n                    <div className=\"outcomes__row\">\r\n                        <div className=\"outcomes__icon\">\r\n                            <i className=\"fas fa-thermometer-three-quarters\"></i>\r\n                        </div>\r\n                        Temperature:\r\n                        <span>{temp}</span>\r\n                        &#8451;\r\n                    </div>\r\n                    <div className=\"outcomes__row\">\r\n                        <div className=\"outcomes__icon\">\r\n                            <i className=\"fas fa-sun\"></i>\r\n                        </div>\r\n                        Sunrise:\r\n                        <span>{sunrise}</span>\r\n                    </div>\r\n                    <div className=\"outcomes__row\">\r\n                        <div className=\"outcomes__icon\">\r\n                            <i className=\"fas fa-sun\"></i>\r\n                        </div>\r\n                        Sunset:\r\n                        <span>{sunset}</span>\r\n                    </div>\r\n                    <div className=\"outcomes__row\">\r\n                        <div className=\"outcomes__icon\">\r\n                            <i className=\"fas fa-wind\"></i>\r\n                        </div>\r\n                        Wind Speed:\r\n                        <span> {wind}</span>\r\n                        m/s\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Outcomes;","import { connect } from 'react-redux';\r\n\r\nimport Outcomes from '../components/Outcomes';\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nexport default connect(mapStateToProps)(Outcomes);","import React from 'react';\r\n\r\nimport './styles.css';\r\nimport Form from '../../containers/formContainer';\r\nimport Outcomes from '../../containers/outcomesContainer';\r\n\r\nconst Main = () => (\r\n    <main className=\"main\">\r\n        <Form />\r\n        <Outcomes />\r\n    </main>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nimport './App.css';\r\nimport Logo from './components/Logo';\r\nimport Main from './components/Main';\r\n\r\nconst App = () => (\r\n    <div className=\"app\">\r\n        <div className=\"app__inner\">\r\n            <Logo />\r\n            <Main />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","import { CHANGED_CITY_NAME, FETCHED_DATA } from '../actions/types';\r\n\r\nconst initialState = {\r\n    code: '',\r\n    city: '',\r\n    temp: '',\r\n    sunrise: '',\r\n    sunset: '',\r\n    wind: '',\r\n    enteredCityName: '',\r\n    error: ''\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGED_CITY_NAME:\r\n            return {\r\n                ...state,\r\n                enteredCityName: action.payload\r\n            };\r\n        case FETCHED_DATA:\r\n            return {\r\n                ...state,\r\n                code: action.payload.code,\r\n                city: action.payload.city,\r\n                temp: action.payload.temp,\r\n                sunrise: action.payload.sunrise,\r\n                sunset: action.payload.sunset,\r\n                wind: action.payload.wind,\r\n                error: action.payload.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default formReducer;","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from './reducers/formReducer';\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}